#"Settings.py" permite acceder a la configuración interna de la página web

"""
Django settings for Shueisha project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
#Import necesario para el correcto funcionamiento de la página web
from pathlib import Path

#Importa librería para acceder a las carpetas de la computadora
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent #El "Base_Dir" encuentra las carpetas automáticamente


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-woo78mwe^#okj%sfu=#q=845ffa(1m72@l4+!jr5!7a2msl*b)"
#Clave de seguridad que se encarga de mantener nuestro código protegido

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#Se encarga de encontrar errores visibles 

#Permite el acceso a la página web de manera gratuita
ALLOWED_HOSTS = []

# Application definition

#Todas las aplicaciones añadidas por defecto en django
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "main",
    "ckeditor",
]

#Marco de enlaces en el procesamiento de solicitudes/respuestas de django. Cada componente es responsable de realizar alguna función específica
MIDDLEWARE = [ 
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

#Le dice a django qué módulo de Python debería usar para la URLconf de este sitio web
ROOT_URLCONF = "Shueisha.urls" 

#Documento de texto o una cadena de Python marcada con el lenguaje de plantillas de django
TEMPLATES = [ 
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "Shueisha.context_processors.project_context",
            ],
        },
    },
]

#Describe cómo se comunica el servidor web con la aplicación web
WSGI_APPLICATION = "Shueisha.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

#Desarrollo de la base de datos
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

#Se encarga de validar la contraseña
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

#Ubicación de los archivos estáticos y mediafiles para que puedan servir fácilmente en producción
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'media')
]

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "mediafiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"